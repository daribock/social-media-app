type Post {
    id: ID!
    body: String!
    username: String!
    createdAt: String!
}

type User {
    id: ID!
    email: String!
    username: String!
    token: String!
    createdAt: String!
}

type ValidationIssue {
    location: String
    message: String!
    severity: IssueSeverity!
}

type ValidationResult {
    hasErrors: Boolean!
    issues: [ValidationIssue!]!
}

enum IssueSeverity {
    ERROR
    INFO
}

input RegisterInput {
    username: String!
    password: String!
    confirmPassword: String!
    email: String!
}

input LoginInput {
    username: String!
    password: String!
}

input CreatePostInput {
    body: String!
}

type Query {
    getPosts: [Post]
    getPost(postId: ID!): Post
}

type Mutation {
    register(registerInput: RegisterInput!): User!
    login(loginInput: LoginInput!): User!
    createPost(createPostInput: CreatePostInput!): Post!
    deletePost(postId: ID!): String!
}
